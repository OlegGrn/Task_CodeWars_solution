//=========  тряска  элемента ========================================

._shaking {
	animation: 1.2s ease-in-out 0s normal none infinite running trambling-animation;
}
@keyframes trambling-animation {
	0%,
	50%,
	100% {
		transform: rotate(0deg);
	}
	10%,
	30% {
		transform: rotate(-10deg);
	}
	20%,
	40% {
		transform: rotate(10deg);
	}
}

//====================================================================
/*
Аниманция покачивания  
*/
.swaying {
	animation: swing 3.5s ease 2s;
	animation-iteration-count: infinite;
}
// .swaying {
// 	animation: swing 1.5s ease;
// 	animation-iteration-count: infinite;
// }

@keyframes swing {
	15% {
		//transform: translateX(5px);
		transform: translateY(5px);
	}
	30% {
		//transform: translateX(-5px);
		transform: translateY(-5px);
	}
	50% {
		//transform: translateX(3px);
		transform: translateY(3px);
	}
	65% {
		//transform: translateX(-3px);
		transform: translateY(-3px);
	}
	80% {
		//transform: translateX(2px);
		transform: translateY(2px);
	}
	100% {
		//transform: translateX(0);
		transform: translateY(0);
	}
}

//====================================================================================================
// поочередная анимация элелемнтов======================================
._queue {
	transform: translate(0, 0);
	opacity: 1;

	@for $var from 1 to 100 {
		$delay: $var * 0.05;
		&:nth-child(#{$var}) {
			@if $var == 1 {
				transition: transform 0.2s ease 0s, opacity 0.2s ease 0s;
			} @else {
				transition: transform 0.2s ease #{$delay + s}, opacity 0.2s ease #{$delay + s};
			}
		}
	}
}

._queue_2 {
	transform: translate(0, 0);
	opacity: 1;
	@for $var from 1 to 100 {
		$delay: $var * 0.01;
		&:nth-child(#{$var}) {
			@if $var == 1 {
				transition: transform 0.2s ease 0s, opacity 0.3s ease 0s;
			} @else {
				transition: transform 0.2s ease #{$delay + s}, opacity 0.3s ease #{$delay + s};
			}
		}
	}
}

._delay {
	@for $var from 1 to 100 {
		$delay: $var * 0.03;
		&:nth-child(#{$var}) {
			@if $var == 1 {
				transition-delay: 0s;
			} @else {
				transition-delay: #{$delay + s};
			}
		}
	}
}

._delay_2 {
	@for $var from 1 to 4 {
		$delay: $var * 0.3;
		&:nth-child(#{$var}) {
			@if $var == 1 {
				transition-delay: 0.2s;
			} @else {
				transition-delay: #{$delay + s};
			}
		}
	}
}

//====== Glitch эфект ====================================================
.box {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
	.glitch {
		color: #fff;
		font-family: "Poppins", sans-serif;
		font-weight: 600;
		font-size: 100px;
		position: relative;
		padding: 30px;
		&:before,
		&:after {
			content: "Glitch";
			color: #fff;
			position: absolute;
			top: 0;
			overflow: hidden;
			padding: 30px;
		}
		&:before {
			left: 3px;
			text-shadow: -3px 0 red;
			animation: glitch-before 2s linear 0s 1 alternate;
		}
		&:after {
			left: -3px;
			text-shadow: -3px 0 blue;
			animation: glitch-after 2s linear 0s 1 alternate;
		}
	}
}

@keyframes glitch-before {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(150) + px, 350px, random(150) + px, 30px);
		}
	}
}

@keyframes glitch-after {
	$steps: 20;
	@for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
			clip: rect(random(150) + px, 350px, random(150) + px, 30px);
		}
	}
}
//====================================================================================================
